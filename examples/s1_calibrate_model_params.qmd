```{julia}
include("data_PML_2019.jl")
```

```{julia}
data.LAI .= data.LAI_sgfitw
# data.LAI .= data.LAI_raw
# data.LAI .= data.LAI_whit
# data = @rename(data, LAI = LAI_whit) # LAI_raw, LAI_whit, LAI_sgfitw
r = calib_PML(data; of_gof=:KGE, maxn=5000)
r.gof
# out = fread("D:/GitHub/PML/PMLV2_Kong2019.m/OUTPUT/PMLv2_flux102_Cal_flux_v012.csv")
# out = @rename(out, ET = ETsim, GPP = GPPsim, ET_obs = ETobs, GPP_obs = GPPobs)
# model_gof(out)
```

# LAI_raw
    NSE       R2        KGE
ET  0.659226  0.681471  0.823243
GPP 0.724708  0.730096  0.796629

# LAI_sgfitw
    NSE       R2        KGE
ET  0.659226  0.681471  0.823243
GPP 0.724708  0.730096  0.796629

# LAI_whit
    NSE       R2        KGE
ET  0.613259  0.646577  0.803562
GPP 0.676971  0.682734  0.78375

# 在`8-day`尺度上训练模型

```julia
julia> GOF(df_out.GPP_obs, df_out.GPP)
(NSE = 0.7336100609128524, R2 = 0.743877707336761, KGE = 0.7290308937710843, R = 0.8624834533698377, RMSE = 
2.1021603075996738, MAE = 1.4098040085324788, bias = 0.18238338885413943, bias_perc = 4.8376021107084135, n_valid = 26414)

julia> GOF(df_out.ET_obs, df_out.ET)
(NSE = 0.6649426918563545, R2 = 0.68019886318664, KGE = 0.8156453875675587, R = 0.8247416948273198, RMSE = 0.7324277346700488, MAE = 0.4914732035326359, bias = -0.029484677463582167, bias_perc = -1.8958637090078327, 
n_valid = 21607)
```
