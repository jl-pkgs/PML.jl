# 1. TODO

## 1.1. 测试参数率定模块

```{julia}
# @time GOF(dat_obs.GPP, dat_sim.GPP)
# @time GOF(dat_obs.ET, dat_sim.ET)
```

## 1.2. 参数率定

在`8-day`尺度上训练模型

```julia
julia> GOF(df_out.GPP_obs, df_out.GPP)
(NSE = 0.7336100609128524, R2 = 0.743877707336761, KGE = 0.7290308937710843, R = 0.8624834533698377, RMSE = 
2.1021603075996738, MAE = 1.4098040085324788, bias = 0.18238338885413943, bias_perc = 4.8376021107084135, n_valid = 26414)

julia> GOF(df_out.ET_obs, df_out.ET)
(NSE = 0.6649426918563545, R2 = 0.68019886318664, KGE = 0.8156453875675587, R = 0.8247416948273198, RMSE = 0.7324277346700488, MAE = 0.4914732035326359, bias = -0.029484677463582167, bias_perc = -1.8958637090078327, 
n_valid = 21607)
```

# 2. 清洗驱动

```{julia}
# # (Prcp, Tavg, U2, Rn, Rs, VPD, LAI, albedo, emiss) = 
# d = df
# par = par0
# res = output_PML{Float64}(; n=nrow(dat));

# ## 在进行滑动平均的时候，需要分站点去执行
# @time r = PMLV2(d.Prcp, d.Tavg, d.Rs, d.Rn, d.VPD, d.U2, d.LAI, d.Pa; 
#   par, res);
# # @btime PMLV2($d.Prcp, $d.Tavg, $d.Rs, $d.Rn, $d.VPD, $d.U2, $LAI, $d.Pa; par, res=$res)
# # df_out = to_df(res)
```
